basePath: /api/v1
definitions:
  domain.Login:
    properties:
      email:
        type: string
      senha:
        minLength: 6
        type: string
    required:
    - email
    - senha
    type: object
  domain.Senha:
    properties:
      senha_atual:
        maxLength: 100
        minLength: 6
        type: string
      senha_nova:
        maxLength: 100
        minLength: 6
        type: string
    required:
    - senha_atual
    - senha_nova
    type: object
  domain.Usuario:
    properties:
      email:
        type: string
      id:
        type: integer
      nome:
        maxLength: 100
        minLength: 3
        type: string
      senha:
        maxLength: 100
        minLength: 6
        type: string
    required:
    - email
    - nome
    - senha
    type: object
  error.AppError:
    properties:
      code:
        description: 'ex.: USER_NOT_FOUND'
        type: string
      message:
        description: msg “safe” para cliente
        type: string
    type: object
  schema.LoginResponseEnvelope:
    description: Resposta do login do usuário
    properties:
      data:
        properties:
          token:
            type: string
          usuario:
            $ref: '#/definitions/domain.Usuario'
        type: object
    type: object
  schema.MessageEnvelope:
    description: Resposta do usuário criado
    properties:
      data:
        properties:
          message:
            type: string
        type: object
    type: object
  schema.UsuarioCreatedEnvelope:
    description: Resposta do usuário criado
    properties:
      data:
        properties:
          id:
            type: integer
        type: object
    type: object
  schema.UsuarioEnvelope:
    description: Resposta do usuário criado
    properties:
      data:
        properties:
          usuario:
            $ref: '#/definitions/domain.Usuario'
        type: object
    type: object
host: localhost:8080
info:
  contact: {}
  description: Este é o serviço de autenticação do sistema de microserviços.
  title: Auth Service API
  version: "1.0"
paths:
  /usuarios:
    post:
      consumes:
      - application/json
      description: Cadastra um novo usuário no sistema
      parameters:
      - description: Dados do usuário
        in: body
        name: usuario
        required: true
        schema:
          $ref: '#/definitions/domain.Usuario'
      produces:
      - application/json
      responses:
        "201":
          description: Usuário cadastrado com sucesso
          schema:
            $ref: '#/definitions/schema.UsuarioCreatedEnvelope'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/error.AppError'
        "409":
          description: 'Conflito: usuário já existe'
          schema:
            $ref: '#/definitions/error.AppError'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/error.AppError'
      summary: Cadastrar um novo usuário
      tags:
      - Usuários
  /usuarios/{id}:
    delete:
      consumes:
      - application/json
      description: Deleta um usuário do sistema
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Usuário deletado com sucesso
          schema: {}
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/error.AppError'
        "401":
          description: Token inválido ou expirado
          schema:
            $ref: '#/definitions/error.AppError'
        "403":
          description: Acesso negado
          schema:
            $ref: '#/definitions/error.AppError'
        "404":
          description: Usuário não encontrado
          schema:
            $ref: '#/definitions/error.AppError'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/error.AppError'
      summary: Deletar um usuário
      tags:
      - Usuários
    put:
      consumes:
      - application/json
      description: Altera as informações do usuário logado
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: string
      - description: Dados do usuário
        in: body
        name: usuario
        required: true
        schema:
          $ref: '#/definitions/domain.Usuario'
      produces:
      - application/json
      responses:
        "200":
          description: Usuário atualizado com sucesso
          schema:
            $ref: '#/definitions/schema.UsuarioEnvelope'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/error.AppError'
        "401":
          description: Token inválido ou expirado
          schema:
            $ref: '#/definitions/error.AppError'
        "403":
          description: Acesso negado
          schema:
            $ref: '#/definitions/error.AppError'
        "404":
          description: Usuário não encontrado
          schema:
            $ref: '#/definitions/error.AppError'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/error.AppError'
      summary: Alterar informações do usuário
      tags:
      - Usuários
  /usuarios/logado:
    get:
      consumes:
      - application/json
      description: Busca as informações do usuário logado a partir do token JWT
      produces:
      - application/json
      responses:
        "200":
          description: Usuário encontrado
          schema:
            $ref: '#/definitions/schema.UsuarioEnvelope'
        "401":
          description: Token inválido ou expirado
          schema:
            $ref: '#/definitions/error.AppError'
        "404":
          description: Usuário não encontrado
          schema:
            $ref: '#/definitions/error.AppError'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/error.AppError'
      summary: Buscar informações do usuário logado
      tags:
      - Usuários
  /usuarios/logado/senha:
    put:
      consumes:
      - application/json
      description: Altera a senha do usuário logado
      parameters:
      - description: Nova senha do usuário
        in: body
        name: senha
        required: true
        schema:
          $ref: '#/definitions/domain.Senha'
      produces:
      - application/json
      responses:
        "200":
          description: Senha atualizada com sucesso
          schema:
            $ref: '#/definitions/schema.MessageEnvelope'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/error.AppError'
        "401":
          description: Token inválido ou expirado
          schema:
            $ref: '#/definitions/error.AppError'
        "403":
          description: Acesso negado
          schema:
            $ref: '#/definitions/error.AppError'
        "404":
          description: Usuário não encontrado
          schema:
            $ref: '#/definitions/error.AppError'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/error.AppError'
      summary: Alterar senha do usuário logado
      tags:
      - Usuários
  /usuarios/login:
    post:
      consumes:
      - application/json
      description: Realiza o login de um usuário e retorna um token JWT
      parameters:
      - description: Dados de login do usuário
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/domain.Login'
      produces:
      - application/json
      responses:
        "200":
          description: Login realizado com sucesso
          schema:
            $ref: '#/definitions/schema.LoginResponseEnvelope'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/error.AppError'
        "401":
          description: Credenciais inválidas
          schema:
            $ref: '#/definitions/error.AppError'
        "404":
          description: Usuário não encontrado
          schema:
            $ref: '#/definitions/error.AppError'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/error.AppError'
      summary: Realizar login de um usuário
      tags:
      - Usuários
swagger: "2.0"
