version: "3.9"

x-amqp-env: &amqp-env
  AMQP_USER: ${AMQP_USER}
  AMQP_PASSWORD: ${AMQP_PASSWORD}
  AMQP_URL: rabbitmq:5672

x-db-env: &db-env
  DB_NAME: ${DB_NAME}
  DB_USER: ${DB_USER}
  DB_PASSWORD: ${DB_PASSWORD}
  DB_HOST: ${DB_HOST}
  DB_PORT: ${DB_PORT}

services:
  mysql:
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${AMQP_USER}
      RABBITMQ_DEFAULT_PASS: ${AMQP_PASSWORD}
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  notification-service:
    image: clau2005/notification-service:latest
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    ports:
      - "8081:8081"
    environment:
      <<: *amqp-env
      ROOT_EMAIL: ${ROOT_EMAIL}
      ROOT_EMAIL_PASSWORD: ${ROOT_EMAIL_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}

  user-worker:
    image: clau2005/user-worker:latest
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    ports:
      - "8082:8082"
    environment:
      <<: [*amqp-env, *db-env]
      JWT_SECRET: ${JWT_SECRET}

  auth-service:
    image: clau2005/auth-service:latest
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      notification-service:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      <<: [*amqp-env, *db-env]
      APP_ENV: dev
      DB_NAME_TEST: ${DB_NAME_TEST}
      JWT_SECRET: ${JWT_SECRET}

volumes:
  mysql_data:
